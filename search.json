[
  {
    "objectID": "materials/3_deployment.html#learning-outcomes",
    "href": "materials/3_deployment.html#learning-outcomes",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nParticipants will: - Understand deployment options (e.g., ShinyApps.io, Posit Connect, and self-hosted solutions) and their relative merits - Understand how to deploy an LLM-powered Shiny app using free-tier hosting. - Understand how to store API keys in environment variables. - Have deployed their own app to Posit Cloud Connect"
  },
  {
    "objectID": "materials/3_deployment.html#deployment-options-and-relative-merits",
    "href": "materials/3_deployment.html#deployment-options-and-relative-merits",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Deployment options and relative merits",
    "text": "Deployment options and relative merits"
  },
  {
    "objectID": "materials/3_deployment.html#demo-deploying-an-app-to-posit-connect-cloud",
    "href": "materials/3_deployment.html#demo-deploying-an-app-to-posit-connect-cloud",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Demo: Deploying an app to Posit Connect Cloud",
    "text": "Demo: Deploying an app to Posit Connect Cloud"
  },
  {
    "objectID": "materials/3_deployment.html#exercise",
    "href": "materials/3_deployment.html#exercise",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Exercise",
    "text": "Exercise\n\nAdd environment variable to Posit Connect Cloud\nDeploy their app and test it live"
  },
  {
    "objectID": "materials/3_deployment.html#wrap-up-discussion",
    "href": "materials/3_deployment.html#wrap-up-discussion",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Wrap-up discussion",
    "text": "Wrap-up discussion"
  },
  {
    "objectID": "materials/3_deployment.html#next-steps",
    "href": "materials/3_deployment.html#next-steps",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Next steps",
    "text": "Next steps"
  },
  {
    "objectID": "materials/3_deployment.html#best-practices",
    "href": "materials/3_deployment.html#best-practices",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Best practices",
    "text": "Best practices"
  },
  {
    "objectID": "materials/3_deployment.html#scaling-advice",
    "href": "materials/3_deployment.html#scaling-advice",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Scaling advice",
    "text": "Scaling advice"
  },
  {
    "objectID": "materials/1_intro.html#learning-outcomes",
    "href": "materials/1_intro.html#learning-outcomes",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nParticipants will understand how to: * Set up {ellmer} and connect to an LLM provider (e.g., OpenAI). * Make basic API calls and process responses."
  },
  {
    "objectID": "materials/1_intro.html#intro-and-overview-of-workshop",
    "href": "materials/1_intro.html#intro-and-overview-of-workshop",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Intro and overview of workshop",
    "text": "Intro and overview of workshop"
  },
  {
    "objectID": "materials/1_intro.html#what-is-ellmer",
    "href": "materials/1_intro.html#what-is-ellmer",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "What is {ellmer}?",
    "text": "What is {ellmer}?"
  },
  {
    "objectID": "materials/1_intro.html#demo",
    "href": "materials/1_intro.html#demo",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Demo",
    "text": "Demo\n\nSetting up API key\nMaking a request"
  },
  {
    "objectID": "materials/1_intro.html#best-practices-and-gotchas",
    "href": "materials/1_intro.html#best-practices-and-gotchas",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Best practices and gotchas",
    "text": "Best practices and gotchas"
  },
  {
    "objectID": "materials/1_intro.html#exercise-modify-prompt-parameters-and-analyse-output-differences",
    "href": "materials/1_intro.html#exercise-modify-prompt-parameters-and-analyse-output-differences",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Exercise: Modify prompt parameters and analyse output differences",
    "text": "Exercise: Modify prompt parameters and analyse output differences"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "",
    "text": "by Nic Crane"
  },
  {
    "objectID": "index.html#october-14th-2025-1330--1700",
    "href": "index.html#october-14th-2025-1330--1700",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "üóì October 14th 2025 ‚è∞ 13:30- 17:00",
    "text": "üóì October 14th 2025 ‚è∞ 13:30- 17:00\n\nWorkshop Overview\nLarge language models (LLMs) are transforming how we work, but using them effectively‚Äîespecially within the R ecosystem‚Äîrequires careful design and deployment. The {ellmer} package simplifies access to LLMs in R, making it easier to build AI-powered applications, automate workflows, and extract structured insights from unstructured data. But how do you move from experimentation to real-world deployment?\nThis hands-on workshop will guide you through practical applications of LLMs in R, using {ellmer} to integrate AI capabilities into Shiny apps. We‚Äôll cover:\n\nprompt design and engineering\nthe {ellmer} R package\ncreating LLM-powered Shiny apps\ndeploying LLM-powered Shiny apps\n\nThroughout the session, we‚Äôll balance hands-on coding with discussion of best practices for deploying LLM-powered automation responsibly. Whether you‚Äôre an R developer exploring AI for the first time or looking to integrate LLMs into business workflows, this workshop will equip you with the tools and techniques to deploy AI-powered solutions confidently.\nParticipants should have basic familiarity with R and some experience working with Shiny apps. Code examples and exercises will be provided to reinforce key concepts. Information will be provided ahead of the workshop about packages to install and any other technical prerequisites.\n\n\nWorkshop Prework\n\nTBD\n\n\n\nWorkshop Schedule\n\nPart 1 - Introduction\nPart 2 - Building LLM-Powered Shiny Apps\nPart 3 - Deployment\n\n\n\nInstructors\nNic Crane is an R consultant with a background in data science and software engineering. They are passionate about open source, and learning and teaching all things R. Nic is part of the core team that maintain the Arrow R package, and a co-author of ‚ÄúScaling up with R and Arrow‚Äù, due to be published by CRC Press later this year.\n\n This work is licensed under a Creative Commons Attribution 4.0 International License."
  },
  {
    "objectID": "license-web.html",
    "href": "license-web.html",
    "title": "License",
    "section": "",
    "text": "This work is licensed under a Creative Commons Attribution 4.0 International License."
  },
  {
    "objectID": "materials/2_llm_shiny.html#learning-outcomes",
    "href": "materials/2_llm_shiny.html#learning-outcomes",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nParticipants will understand how to: - How to structure Shiny apps with {ellmer} components, referencing the provided template - How to implement basic input validation to mitigate prompt injection risks - How to get structured outputs from it - Best practices for reactivity so not making too many requests"
  },
  {
    "objectID": "materials/2_llm_shiny.html#shiny-app-basics-and-where-ellmer-should-be-integrated",
    "href": "materials/2_llm_shiny.html#shiny-app-basics-and-where-ellmer-should-be-integrated",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Shiny app basics and where {ellmer} should be integrated",
    "text": "Shiny app basics and where {ellmer} should be integrated\n(as app not package for simplicity)"
  },
  {
    "objectID": "materials/2_llm_shiny.html#storing-prompts-in-inst-and-using-glue-like-syntax",
    "href": "materials/2_llm_shiny.html#storing-prompts-in-inst-and-using-glue-like-syntax",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Storing prompts in inst and using glue-like syntax",
    "text": "Storing prompts in inst and using glue-like syntax"
  },
  {
    "objectID": "materials/2_llm_shiny.html#input-validation-and-just-using-selectors-and-templating-etc",
    "href": "materials/2_llm_shiny.html#input-validation-and-just-using-selectors-and-templating-etc",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Input validation (and just using selectors and templating etc)",
    "text": "Input validation (and just using selectors and templating etc)"
  },
  {
    "objectID": "materials/2_llm_shiny.html#retrieving-structured-output",
    "href": "materials/2_llm_shiny.html#retrieving-structured-output",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Retrieving structured output",
    "text": "Retrieving structured output"
  },
  {
    "objectID": "materials/2_llm_shiny.html#demo",
    "href": "materials/2_llm_shiny.html#demo",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Demo",
    "text": "Demo\n\nWalkthrough of the provided Shiny app skeleton:\nReview UI and server structure.\nIdentify where {ellmer} should be integrated and prompts stored"
  },
  {
    "objectID": "materials/2_llm_shiny.html#limiting-token-usage-via-reactivity-button-press-and-monitoring-usage",
    "href": "materials/2_llm_shiny.html#limiting-token-usage-via-reactivity-button-press-and-monitoring-usage",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Limiting token usage via reactivity (button press) and monitoring usage",
    "text": "Limiting token usage via reactivity (button press) and monitoring usage"
  },
  {
    "objectID": "materials/2_llm_shiny.html#preventing-too-many-calls-within-short-space-of-time-button-reclick",
    "href": "materials/2_llm_shiny.html#preventing-too-many-calls-within-short-space-of-time-button-reclick",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Preventing too many calls within short space of time (button reclick?)",
    "text": "Preventing too many calls within short space of time (button reclick?)"
  },
  {
    "objectID": "materials/2_llm_shiny.html#exercise-creating-own-prompt-templates-in-the-app-and-adding-input-validation-for-free-text-fields",
    "href": "materials/2_llm_shiny.html#exercise-creating-own-prompt-templates-in-the-app-and-adding-input-validation-for-free-text-fields",
    "title": "Deploying AI in R with {ellmer} and {shiny} - From Experimentation to Production",
    "section": "Exercise: Creating own prompt templates in the app and Adding input validation for free text fields",
    "text": "Exercise: Creating own prompt templates in the app and Adding input validation for free text fields"
  }
]